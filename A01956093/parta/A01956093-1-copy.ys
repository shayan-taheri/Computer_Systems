# Shayan Taheri (A01956093)
# Execution begins at address 0

	.pos 0
init:
	irmovl Stack, %esp
	irmovl Stack, %ebp
	jmp Main

.align 4
# Source block
src:
	.long 0x00a
	.long 0x0b0
	.long 0xc00
# Destination block
dest:
	.long 0x111
	.long 0x222
	.long 0x333

Main:
	irmovl $3, %ebx
	pushl %ebx
	irmovl dest, %ecx
	pushl %ecx
	irmovl src, %edx
	pushl %edx
	call Copy
	halt

Copy:
	pushl	%ebp
	rrmovl	%esp, %ebp
	irmovl	$16, %ecx
	subl	%ecx, %esp
	irmovl	$0, %ecx
	rmmovl	%ecx, -8(%ebp)
	jmp	First
Second:
	mrmovl	8(%ebp), %eax
	mrmovl	(%eax), %eax
	rmmovl	%eax, -4(%ebp)
	irmovl	$4, %ecx
	mrmovl	8(%ebp), %ebx
	addl	%ecx, %ebx
	rmmovl	%ebx, 8(%ebp)
	mrmovl	12(%ebp), %eax
	mrmovl	-4(%ebp), %edx
	rmmovl	%edx, (%eax)
	irmovl  $4, %ecx
        mrmovl  12(%ebp), %ebx
        addl    %ecx, %ebx
        rmmovl  %ebx, 12(%ebp)
	mrmovl	-4(%ebp), %eax
	mrmovl	-8(%ebp), %ecx
	xorl	%eax, %ecx
	rmmovl	%ecx, -8(%ebp)
	irmovl	$1, %ecx
	mrmovl	16(%ebp), %ebx
	subl	%ecx, %ebx
	rmmovl	%ebx, 16(%ebp)
First:
	irmovl	$0, %ecx
	mrmovl	16(%ebp), %ebx
	subl	%ecx, %ebx
	jg	Second
	mrmovl	-8(%ebp), %eax
	leave
	ret

End:
	popl %ebp
	ret
	.pos 0xca0

Stack: # The stack goes here
