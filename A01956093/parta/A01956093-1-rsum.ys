# Shayan Taheri (A01956093)
# Execution begins at address 0

	.pos 0
init:
	irmovl Stack, %esp
	irmovl Stack, %ebp
	jmp Main

# Sample linked list

.align 4
ele1:
	.long 0x00a
	.long ele2
ele2:
	.long 0x0b0
	.long ele3
ele3:
	.long 0xc00
	.long 0

Main:
	irmovl ele1, %edx
	pushl %edx
	call Rsum
	halt

Rsum:
	pushl	%ebp
	rrmovl	%esp, %ebp
	irmovl	$40, %ecx
	subl	%ecx, %esp
	irmovl	$0, %ecx
	mrmovl	8(%ebp), %ebx
	subl	%ecx, %ebx
	rmmovl	%ebx, 8(%ebp)
	jne	First
	irmovl	$0, %eax
	jmp	Second
First:
	mrmovl	8(%ebp), %eax
	mrmovl	(%eax), %eax
	rmmovl	%eax, -16(%ebp)
	mrmovl	8(%ebp), %eax
	mrmovl	4(%eax), %eax
	rmmovl	%eax, (%esp)
	call	Rsum
	rmmovl	%eax, -12(%ebp)
	mrmovl	-12(%ebp), %eax
	mrmovl	-16(%ebp), %edx
	# leal	(%edx,%eax), %eax
	addl	%edx, %eax
Second:
	leave
	ret

End:
	popl %ebp
	ret
	.pos 0xca0

Stack: # The stack goes here
